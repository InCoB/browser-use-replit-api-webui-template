# API Keys for external services
OPENAI_API_KEY=your_openai_api_key_here
# Add your Google API Key if you want to use Gemini models
GOOGLE_API_KEY=your_google_api_key_here

# --- Playwright Configuration (Essential for Replit) --- 

# Path to the Chromium executable provided by Nix
# IMPORTANT: This path might change depending on the Replit Nix environment.
# Run 'which chromium | cat' in the shell to find the correct path if needed.
PLAYWRIGHT_CHROMIUM_EXECUTABLE_PATH=/nix/store/zi4f80l169xlmivz8vja8wlphq74qqk0-chromium-125.0.6422.141/bin/chromium

# Skip Playwright's own host validation checks (necessary when using Nix Chromium)
PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS=true
# Skip browser downloads as we use the Nix-provided browser
PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true
# Skip system dependency checks (handled by Nix)
PLAYWRIGHT_CHROMIUM_SKIP_SYSTEM_DEPS=true

# --- Browser-Use Configuration --- 

# Recommended browser launch arguments for stability and compatibility in Replit
BROWSER_USE_BROWSER_ARGS=--no-sandbox,--disable-setuid-sandbox,--disable-dev-shm-usage,--disable-gpu,--disable-software-rasterizer,--disable-extensions,--single-process,--no-zygote
# Use chromium (patched in app.py to use NIX path)
BROWSER_USE_BROWSER_TYPE=chromium
# Force headless mode (required in Replit)
BROWSER_USE_HEADLESS=true
# Limit thread usage (helps prevent resource issues)
BROWSER_USE_MAX_THREADS=1

# --- Internal API Authentication --- 

# Secret key required for accessing protected API endpoints (/api/browser-tasks, /api/browser-tasks/<id>)
EXTERNAL_API_KEY=your_externa_api_secret_key_here

# Also expose the same key to the Vite frontend build (NOTE: Less secure for public sites)
# This should typically have the same value as
# CURENTLY HARDCODED!!! the frontend API key is currently **hardcoded** in `client/src/components/demo-console.tsx`.**Action Required:** You **must** manually replace the placeholder key `'93ecb5a7-64f6-4d3c-9ba1-f5ca5eadc1f9'` inside the `fetchApi` and `postApi` functions in that file.

VITE_EXTERNAL_API_KEY=your_internal_api_secret_key_here

# Set logging level for the Flask API (e.g., INFO, DEBUG, WARNING, ERROR)
FLASK_LOG_LEVEL=INFO

# Set logging level for the Node.js Server (e.g., INFO, DEBUG)
# DEBUG will log proxied API requests details
SERVER_LOG_LEVEL=INFO

# == Browser Automation Settings ==

# --- API Testing Configuration ---
# Base URL for the running application (used by api_test.py)
# Should typically be your Repl's external URL (e.g., https://your-repl-name.replit.dev/)
API_BASE_URL=your_repl_external_url_here


# URL for the Python API backend that the Node.js proxy should forward requests to
PYTHON_API_URL=http://localhost:5001 